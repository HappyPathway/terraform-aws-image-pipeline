
# This is a basic workflow to help you get started with Actions

name: Terraform Plan


# Controls when the workflow will run
on:
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]
    env:
      AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      AWS_ACCESS_KEY_ID: "${{ vars.AWS_ACCESS_KEY_ID }}"
      AWS_SESSION_TOKEN: "${{ secrets.AWS_SESSION_TOKEN }}"
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/setup-node@v4
        with:
           node-version: 16
          
      - uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ vars.terraform_version }}

      - name: Terraform Format
        id: fmt
        run: |
          terraform fmt
          if ! git diff-index --quiet HEAD; then 
            git config --global user.name 'arnol377'
            git config --global user.email 'david.j.arnold.jr@census.gov'
            git commit -am "Autoformatting TF Code"
            git push
            echo "auto_format=true" >> $GITHUB_ENV 
          fi

      - name: Autoformat Halt
        if: env.auto_format == 'true'
        run: exit 0

      - name: Terraform Init
        id: init
        
        working-directory: ./examples
        
        run: terraform init -upgrade

      - name: Terraform Validate
        id: validate
        
        working-directory: ./examples
        
        run: terraform validate

      - name: Terraform Plan
        id: plan
        
        working-directory: ./examples
        
        run: terraform plan
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan:
            ${{ steps.plan.outcome }}
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
